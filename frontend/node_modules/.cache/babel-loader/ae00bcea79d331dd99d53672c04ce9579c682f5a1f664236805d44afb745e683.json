{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\Documents\\\\CS490\\\\ProjectGit\\\\cs-490-project\\\\frontend\\\\src\\\\certifications\\\\CertificationCard.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CertificationCard({\n  cert\n}) {\n  const today = new Date().toISOString().split(\"T\")[0];\n  const expired = cert.expiration_date && cert.expiration_date < today;\n  const expiringSoon = cert.expiration_date && !cert.does_not_expire && new Date(cert.expiration_date) <= new Date(Date.now() + 90 * 24 * 60 * 60 * 1000);\n  let bgColor = \"#fff\";\n  let warningText = \"\";\n  if (expired) {\n    bgColor = \"#a43333ff\"; // soft red\n    warningText = \"‚ùå Expired\";\n  } else if (expiringSoon) {\n    bgColor = \"#e08f38ff\"; // soft orange\n    warningText = \"‚ö†Ô∏è About to Expire\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      borderRadius: \"4px\",\n      padding: \"8px\",\n      marginBottom: \"8px\",\n      backgroundColor: bgColor\n    },\n    children: [(expired || expiringSoon) && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: \"bold\",\n        marginBottom: \"4px\"\n      },\n      children: warningText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: cert.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), \" (\", cert.category || \"Categories\", \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 69\n    }, this), cert.issuer, \" | Earned: \", cert.date_earned, \" | \", cert.does_not_expire ? \"Does not expire\" : `Expires: ${cert.expiration_date || \"-\"}`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 138\n    }, this), cert.cert_id && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Cert #: \", cert.cert_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 60\n    }, this), \"Verified: \", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: cert.verified ? \"green\" : \"red\"\n      },\n      children: cert.verified ? \"‚úÖ\" : \"‚ùå\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 108\n    }, this), cert.document_url && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `http://127.0.0.1:8000/uploads/certifications/${cert.document_url}`,\n      download: true,\n      children: \"\\uD83D\\uDCC4 Download Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = CertificationCard;\nvar _c;\n$RefreshReg$(_c, \"CertificationCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CertificationCard","cert","today","Date","toISOString","split","expired","expiration_date","expiringSoon","does_not_expire","now","bgColor","warningText","style","border","borderRadius","padding","marginBottom","backgroundColor","children","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","name","category","issuer","date_earned","cert_id","color","verified","document_url","href","download","_c","$RefreshReg$"],"sources":["C:/Users/jonat/Documents/CS490/ProjectGit/cs-490-project/frontend/src/certifications/CertificationCard.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function CertificationCard({ cert }) {\r\n  const today = new Date().toISOString().split(\"T\")[0];\r\n\r\n  const expired = cert.expiration_date && cert.expiration_date < today;\r\n  const expiringSoon = cert.expiration_date && !cert.does_not_expire &&\r\n                       new Date(cert.expiration_date) <= new Date(Date.now() + 90*24*60*60*1000);\r\n\r\n  let bgColor = \"#fff\";\r\n  let warningText = \"\";\r\n  if (expired) {\r\n    bgColor = \"#a43333ff\"; // soft red\r\n    warningText = \"‚ùå Expired\";\r\n  } else if (expiringSoon) {\r\n    bgColor = \"#e08f38ff\"; // soft orange\r\n    warningText = \"‚ö†Ô∏è About to Expire\";\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      border: \"1px solid #ccc\",\r\n      borderRadius: \"4px\",\r\n      padding: \"8px\",\r\n      marginBottom: \"8px\",\r\n      backgroundColor: bgColor\r\n    }}>\r\n      {(expired || expiringSoon) && <div style={{ fontWeight: \"bold\", marginBottom: \"4px\" }}>{warningText}</div>}\r\n\r\n      <strong>{cert.name}</strong> ({cert.category || \"Categories\"})<br />\r\n      {cert.issuer} | Earned: {cert.date_earned} | {cert.does_not_expire ? \"Does not expire\" : `Expires: ${cert.expiration_date || \"-\"}`}<br />\r\n      {cert.cert_id && <span>Cert #: {cert.cert_id}</span>}<br />\r\n      Verified: <span style={{ color: cert.verified ? \"green\" : \"red\" }}>{cert.verified ? \"‚úÖ\" : \"‚ùå\"}</span><br />\r\n      {cert.document_url && (\r\n        <a \r\n          href={`http://127.0.0.1:8000/uploads/certifications/${cert.document_url}`} \r\n          download\r\n        >\r\n          üìÑ Download Document\r\n        </a>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}