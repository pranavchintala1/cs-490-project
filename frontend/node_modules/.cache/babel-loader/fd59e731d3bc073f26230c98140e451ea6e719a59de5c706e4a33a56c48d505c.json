{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\Documents\\\\CS490\\\\ProjectGit\\\\cs-490-project\\\\frontend\\\\src\\\\projects\\\\ProjectList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ProjectForm from \"./ProjectForm\";\nimport ProjectCard from \"./ProjectCard\";\nimport { API_URL } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectsList() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [filters, setFilters] = useState({\n    technology: \"\",\n    industry: \"\",\n    status: \"\"\n  });\n  const fetchProjects = async () => {\n    const res = await fetch(`${API_URL}/projects/`);\n    const data = await res.json();\n    setProjects(data);\n  };\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const addProject = async formData => {\n    const res = await fetch(`${API_URL}/projects/`, {\n      method: \"POST\",\n      body: formData\n    });\n    const newProject = await res.json();\n    setProjects([...projects, newProject]);\n  };\n  const deleteProject = async id => {\n    if (!window.confirm(\"Delete this project?\")) return;\n    await fetch(`${API_URL}/projects/${id}`, {\n      method: \"DELETE\"\n    });\n    setProjects(projects.filter(p => p.id !== id));\n  };\n  const filtered = projects.filter(p => {\n    var _p$technologies, _p$technologies2;\n    return (p.name.toLowerCase().includes(search.toLowerCase()) || ((_p$technologies = p.technologies) === null || _p$technologies === void 0 ? void 0 : _p$technologies.some(t => t.toLowerCase().includes(search.toLowerCase())))) && (filters.technology === \"\" || ((_p$technologies2 = p.technologies) === null || _p$technologies2 === void 0 ? void 0 : _p$technologies2.includes(filters.technology))) && (filters.industry === \"\" || p.industry === filters.industry) && (filters.status === \"\" || p.status === filters.status);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Special Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectForm, {\n      addProject: addProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"10px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search projects...\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filters.technology,\n        onChange: e => setFilters({\n          ...filters,\n          technology: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Technologies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), Array.from(new Set(projects.flatMap(p => p.technologies || []))).map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t,\n          children: t\n        }, t, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 86\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filters.status,\n        onChange: e => setFilters({\n          ...filters,\n          status: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Planned\",\n          children: \"Planned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Ongoing\",\n          children: \"Ongoing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filters.industry,\n        onChange: e => setFilters({\n          ...filters,\n          industry: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Industries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), Array.from(new Set(projects.map(p => p.industry))).map(ind => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: ind,\n          children: ind\n        }, ind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 74\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), filtered.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No projects found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-grid\",\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: filtered.map((p, idx) => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: p,\n        deleteProject: deleteProject\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectsList, \"KXL8ryY2mJNDW9+MZdaTj1UHfj4=\");\n_c = ProjectsList;\nvar _c;\n$RefreshReg$(_c, \"ProjectsList\");","map":{"version":3,"names":["React","useEffect","useState","ProjectForm","ProjectCard","API_URL","jsxDEV","_jsxDEV","ProjectsList","_s","projects","setProjects","search","setSearch","filters","setFilters","technology","industry","status","fetchProjects","res","fetch","data","json","addProject","formData","method","body","newProject","deleteProject","id","window","confirm","filter","p","filtered","_p$technologies","_p$technologies2","name","toLowerCase","includes","technologies","some","t","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","placeholder","value","onChange","e","target","Array","from","Set","flatMap","map","ind","length","className","display","flexWrap","idx","project","_c","$RefreshReg$"],"sources":["C:/Users/jonat/Documents/CS490/ProjectGit/cs-490-project/frontend/src/projects/ProjectList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ProjectForm from \"./ProjectForm\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport { API_URL } from \"../config\";\r\n\r\nexport default function ProjectsList() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filters, setFilters] = useState({ technology: \"\", industry: \"\", status: \"\" });\r\n\r\n  const fetchProjects = async () => {\r\n    const res = await fetch(`${API_URL}/projects/`);\r\n    const data = await res.json();\r\n    setProjects(data);\r\n  };\r\n\r\n  useEffect(() => { fetchProjects(); }, []);\r\n\r\n  const addProject = async (formData) => {\r\n    const res = await fetch(`${API_URL}/projects/`, { method: \"POST\", body: formData });\r\n    const newProject = await res.json();\r\n    setProjects([...projects, newProject]);\r\n  };\r\n\r\n  const deleteProject = async (id) => {\r\n    if (!window.confirm(\"Delete this project?\")) return;\r\n    await fetch(`${API_URL}/projects/${id}`, { method: \"DELETE\" });\r\n    setProjects(projects.filter(p => p.id !== id));\r\n  };\r\n\r\n  const filtered = projects.filter(p => \r\n    (p.name.toLowerCase().includes(search.toLowerCase()) || p.technologies?.some(t => t.toLowerCase().includes(search.toLowerCase()))) &&\r\n    (filters.technology === \"\" || p.technologies?.includes(filters.technology)) &&\r\n    (filters.industry === \"\" || p.industry === filters.industry) &&\r\n    (filters.status === \"\" || p.status === filters.status)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Special Projects</h2>\r\n      <ProjectForm addProject={addProject} />\r\n      <div style={{margin:\"10px 0\"}}>\r\n        <input placeholder=\"Search projects...\" value={search} onChange={e => setSearch(e.target.value)} />\r\n        <select value={filters.technology} onChange={e => setFilters({...filters, technology: e.target.value})}>\r\n          <option value=\"\">All Technologies</option>\r\n          {Array.from(new Set(projects.flatMap(p => p.technologies || []))).map(t => <option key={t} value={t}>{t}</option>)}\r\n        </select>\r\n        <select value={filters.status} onChange={e => setFilters({...filters, status: e.target.value})}>\r\n          <option value=\"\">All Status</option>\r\n          <option value=\"Planned\">Planned</option>\r\n          <option value=\"Ongoing\">Ongoing</option>\r\n          <option value=\"Completed\">Completed</option>\r\n        </select>\r\n        <select value={filters.industry} onChange={e => setFilters({...filters, industry: e.target.value})}>\r\n          <option value=\"\">All Industries</option>\r\n          {Array.from(new Set(projects.map(p => p.industry))).map(ind => <option key={ind} value={ind}>{ind}</option>)}\r\n        </select>\r\n      </div>\r\n      {filtered.length === 0 && <p>No projects found</p>}\r\n      <div className=\"project-grid\" style={{display:\"flex\", flexWrap:\"wrap\"}}>\r\n        {filtered.map((p, idx) => <ProjectCard key={idx} project={p} deleteProject={deleteProject} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}