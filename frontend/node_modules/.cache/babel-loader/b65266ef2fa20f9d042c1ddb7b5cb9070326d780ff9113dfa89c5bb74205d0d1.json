{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\Documents\\\\CS490\\\\ProjectGit\\\\cs-490-project\\\\frontend\\\\src\\\\projects\\\\ProjectList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ProjectForm from \"./ProjectForm\";\nimport ProjectCard from \"./ProjectCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL + \"/projects/\";\nexport default function ProjectsList() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  // Fetch projects from backend\n  const fetchProjects = async () => {\n    const res = await fetch(`${API_URL}?user_id=${process.env.REACT_APP_USER_ID}`);\n    const data = await res.json();\n    setProjects(data || []);\n  };\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  // Add new project\n  const addProject = async formData => {\n    formData.append(\"user_id\", process.env.REACT_APP_USER_ID); // backend requires user_id\n    const res = await fetch(API_URL, {\n      method: \"POST\",\n      body: formData\n    });\n    const added = await res.json();\n    setProjects([...projects, added]);\n  };\n\n  // Delete project\n  const deleteProject = async id => {\n    if (!window.confirm(\"Delete this project?\")) return;\n    await fetch(`${API_URL}${id}?user_id=${process.env.REACT_APP_USER_ID}`, {\n      method: \"DELETE\"\n    });\n    setProjects(projects.filter(p => p.id !== id));\n  };\n\n  // Search projects by name or technologies\n  const filteredProjects = projects.filter(p => {\n    var _p$name, _p$technologies;\n    return ((_p$name = p.name) === null || _p$name === void 0 ? void 0 : _p$name.toLowerCase().includes(search.toLowerCase())) || ((_p$technologies = p.technologies) === null || _p$technologies === void 0 ? void 0 : _p$technologies.some(t => t.toLowerCase().includes(search.toLowerCase())));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Special Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectForm, {\n      addProject: addProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Search projects...\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      style: {\n        margin: \"8px 0\",\n        padding: \"4px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), filteredProjects.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No projects found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 41\n    }, this), filteredProjects.map(p => /*#__PURE__*/_jsxDEV(ProjectCard, {\n      project: p,\n      deleteProject: deleteProject\n    }, p.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectsList, \"6VXhtN4uEuG9L1cV3xpHX7oX5vc=\");\n_c = ProjectsList;\nvar _c;\n$RefreshReg$(_c, \"ProjectsList\");","map":{"version":3,"names":["React","useEffect","useState","ProjectForm","ProjectCard","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","ProjectsList","_s","projects","setProjects","search","setSearch","fetchProjects","res","fetch","REACT_APP_USER_ID","data","json","addProject","formData","append","method","body","added","deleteProject","id","window","confirm","filter","p","filteredProjects","_p$name","_p$technologies","name","toLowerCase","includes","technologies","some","t","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","style","margin","padding","length","map","project","_c","$RefreshReg$"],"sources":["C:/Users/jonat/Documents/CS490/ProjectGit/cs-490-project/frontend/src/projects/ProjectList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ProjectForm from \"./ProjectForm\";\r\nimport ProjectCard from \"./ProjectCard\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL + \"/projects/\";\r\n\r\nexport default function ProjectsList() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // Fetch projects from backend\r\n  const fetchProjects = async () => {\r\n    const res = await fetch(`${API_URL}?user_id=${process.env.REACT_APP_USER_ID}`);\r\n    const data = await res.json();\r\n    setProjects(data || []);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  // Add new project\r\n  const addProject = async (formData) => {\r\n    formData.append(\"user_id\", process.env.REACT_APP_USER_ID); // backend requires user_id\r\n    const res = await fetch(API_URL, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    const added = await res.json();\r\n    setProjects([...projects, added]);\r\n  };\r\n\r\n  // Delete project\r\n  const deleteProject = async (id) => {\r\n    if (!window.confirm(\"Delete this project?\")) return;\r\n    await fetch(`${API_URL}${id}?user_id=${process.env.REACT_APP_USER_ID}`, { method: \"DELETE\" });\r\n    setProjects(projects.filter((p) => p.id !== id));\r\n  };\r\n\r\n  // Search projects by name or technologies\r\n  const filteredProjects = projects.filter(\r\n    (p) =>\r\n      p.name?.toLowerCase().includes(search.toLowerCase()) ||\r\n      p.technologies?.some((t) => t.toLowerCase().includes(search.toLowerCase()))\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Special Projects</h2>\r\n      <ProjectForm addProject={addProject} />\r\n\r\n      <input\r\n        placeholder=\"Search projects...\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        style={{ margin: \"8px 0\", padding: \"4px\" }}\r\n      />\r\n\r\n      {filteredProjects.length === 0 && <p>No projects found</p>}\r\n\r\n      {filteredProjects.map((p) => (\r\n        <ProjectCard\r\n          key={p.id}\r\n          project={p}\r\n          deleteProject={deleteProject}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}