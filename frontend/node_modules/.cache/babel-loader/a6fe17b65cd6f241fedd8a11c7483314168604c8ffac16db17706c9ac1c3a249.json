{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\Documents\\\\CS490\\\\ProjectGit\\\\cs-490-project\\\\frontend\\\\src\\\\certifications\\\\CertificationList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CertificationCard from \"./CertificationCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nconst USER_ID = \"temp_user\"; // adjust as needed\n\nexport default function CertificationList() {\n  _s();\n  const [certs, setCerts] = useState([]);\n  const [newCert, setNewCert] = useState({\n    name: \"\",\n    issuer: \"\",\n    date_earned: \"\",\n    expiration_date: \"\",\n    does_not_expire: false,\n    cert_id: \"\",\n    category: \"General\",\n    verified: false\n  });\n  useEffect(() => {\n    fetchCertifications();\n  }, []);\n  const fetchCertifications = async () => {\n    try {\n      const res = await fetch(`${API_URL}/certifications?user_id=${USER_ID}`);\n      const data = await res.json();\n      setCerts(data.map((c, i) => ({\n        ...c,\n        position: i\n      })) // ensure positions exist\n      );\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const addCertification = async () => {\n    try {\n      const formData = new FormData();\n      Object.entries(newCert).forEach(([key, value]) => formData.append(key, value));\n      formData.append(\"user_id\", USER_ID);\n      const res = await fetch(`${API_URL}/certifications/`, {\n        method: \"POST\",\n        body: formData\n      });\n      const added = await res.json();\n\n      // Frontend sort & position logic\n      setCerts(prev => {\n        const updated = [...prev, added];\n        const today = new Date();\n        return updated.sort((a, b) => {\n          const aExp = a.expiration_date ? new Date(a.expiration_date) : null;\n          const bExp = b.expiration_date ? new Date(b.expiration_date) : null;\n          const aExpired = aExp && aExp < today;\n          const bExpired = bExp && bExp < today;\n          const aExpSoon = aExp && aExp - today <= 1000 * 60 * 60 * 24 * 90;\n          const bExpSoon = bExp && bExp - today <= 1000 * 60 * 60 * 24 * 90;\n          if (aExpired && !bExpired) return -1;\n          if (!aExpired && bExpired) return 1;\n          if (aExpSoon && !bExpSoon) return -1;\n          if (!aExpSoon && bExpSoon) return 1;\n          return 0;\n        }).map((c, i) => ({\n          ...c,\n          position: i\n        }));\n      });\n      setNewCert({\n        name: \"\",\n        issuer: \"\",\n        date_earned: \"\",\n        expiration_date: \"\",\n        does_not_expire: false,\n        cert_id: \"\",\n        category: \"General\",\n        verified: false\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const deleteCertification = async id => {\n    if (!window.confirm(\"Delete this certification?\")) return;\n    try {\n      await fetch(`${API_URL}/certifications/${id}?user_id=${USER_ID}`, {\n        method: \"DELETE\"\n      });\n      setCerts(prev => prev.filter(c => c.id !== id));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Certification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"12px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name\",\n        value: newCert.name,\n        onChange: e => setNewCert({\n          ...newCert,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Issuer\",\n        value: newCert.issuer,\n        onChange: e => setNewCert({\n          ...newCert,\n          issuer: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Date Earned\",\n        value: newCert.date_earned,\n        onChange: e => setNewCert({\n          ...newCert,\n          date_earned: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Expiration Date\",\n        value: newCert.expiration_date,\n        onChange: e => setNewCert({\n          ...newCert,\n          expiration_date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCertification,\n        children: \"Add Certification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Certifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: certs.map(cert => /*#__PURE__*/_jsxDEV(CertificationCard, {\n        cert: cert,\n        onDelete: deleteCertification\n      }, cert.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(CertificationList, \"2QA02lC5OS/Z/fd5sRnXYOKugYg=\");\n_c = CertificationList;\nvar _c;\n$RefreshReg$(_c, \"CertificationList\");","map":{"version":3,"names":["React","useEffect","useState","CertificationCard","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","USER_ID","CertificationList","_s","certs","setCerts","newCert","setNewCert","name","issuer","date_earned","expiration_date","does_not_expire","cert_id","category","verified","fetchCertifications","res","fetch","data","json","map","c","i","position","err","console","error","addCertification","formData","FormData","Object","entries","forEach","key","value","append","method","body","added","prev","updated","today","Date","sort","a","b","aExp","bExp","aExpired","bExpired","aExpSoon","bExpSoon","deleteCertification","id","window","confirm","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","placeholder","onChange","e","target","type","onClick","cert","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/jonat/Documents/CS490/ProjectGit/cs-490-project/frontend/src/certifications/CertificationList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport CertificationCard from \"./CertificationCard\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\nconst USER_ID = \"temp_user\"; // adjust as needed\r\n\r\nexport default function CertificationList() {\r\n  const [certs, setCerts] = useState([]);\r\n  const [newCert, setNewCert] = useState({\r\n    name: \"\",\r\n    issuer: \"\",\r\n    date_earned: \"\",\r\n    expiration_date: \"\",\r\n    does_not_expire: false,\r\n    cert_id: \"\",\r\n    category: \"General\",\r\n    verified: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchCertifications();\r\n  }, []);\r\n\r\n  const fetchCertifications = async () => {\r\n    try {\r\n      const res = await fetch(`${API_URL}/certifications?user_id=${USER_ID}`);\r\n      const data = await res.json();\r\n      setCerts(\r\n        data.map((c, i) => ({ ...c, position: i })) // ensure positions exist\r\n      );\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const addCertification = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      Object.entries(newCert).forEach(([key, value]) => formData.append(key, value));\r\n      formData.append(\"user_id\", USER_ID);\r\n\r\n      const res = await fetch(`${API_URL}/certifications/`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const added = await res.json();\r\n\r\n      // Frontend sort & position logic\r\n      setCerts((prev) => {\r\n        const updated = [...prev, added];\r\n        const today = new Date();\r\n        return updated\r\n          .sort((a, b) => {\r\n            const aExp = a.expiration_date ? new Date(a.expiration_date) : null;\r\n            const bExp = b.expiration_date ? new Date(b.expiration_date) : null;\r\n\r\n            const aExpired = aExp && aExp < today;\r\n            const bExpired = bExp && bExp < today;\r\n\r\n            const aExpSoon = aExp && aExp - today <= 1000 * 60 * 60 * 24 * 90;\r\n            const bExpSoon = bExp && bExp - today <= 1000 * 60 * 60 * 24 * 90;\r\n\r\n            if (aExpired && !bExpired) return -1;\r\n            if (!aExpired && bExpired) return 1;\r\n            if (aExpSoon && !bExpSoon) return -1;\r\n            if (!aExpSoon && bExpSoon) return 1;\r\n            return 0;\r\n          })\r\n          .map((c, i) => ({ ...c, position: i }));\r\n      });\r\n\r\n      setNewCert({\r\n        name: \"\",\r\n        issuer: \"\",\r\n        date_earned: \"\",\r\n        expiration_date: \"\",\r\n        does_not_expire: false,\r\n        cert_id: \"\",\r\n        category: \"General\",\r\n        verified: false,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const deleteCertification = async (id) => {\r\n    if (!window.confirm(\"Delete this certification?\")) return;\r\n    try {\r\n      await fetch(`${API_URL}/certifications/${id}?user_id=${USER_ID}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      setCerts((prev) => prev.filter((c) => c.id !== id));\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add Certification</h2>\r\n      <div style={{ marginBottom: \"12px\" }}>\r\n        <input\r\n          placeholder=\"Name\"\r\n          value={newCert.name}\r\n          onChange={(e) => setNewCert({ ...newCert, name: e.target.value })}\r\n        />\r\n        <input\r\n          placeholder=\"Issuer\"\r\n          value={newCert.issuer}\r\n          onChange={(e) => setNewCert({ ...newCert, issuer: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          placeholder=\"Date Earned\"\r\n          value={newCert.date_earned}\r\n          onChange={(e) => setNewCert({ ...newCert, date_earned: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          placeholder=\"Expiration Date\"\r\n          value={newCert.expiration_date}\r\n          onChange={(e) => setNewCert({ ...newCert, expiration_date: e.target.value })}\r\n        />\r\n        <button onClick={addCertification}>Add Certification</button>\r\n      </div>\r\n\r\n      <h2>Certifications</h2>\r\n      <div>\r\n        {certs.map((cert) => (\r\n          <CertificationCard key={cert.id} cert={cert} onDelete={deleteCertification} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}