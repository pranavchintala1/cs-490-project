{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\Documents\\\\CS490\\\\ProjectGit\\\\cs-490-project\\\\frontend\\\\src\\\\certifications\\\\CertificationList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CertificationForm from \"./CertificationForm\";\nimport CertificationCard from \"./CertificationCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL + \"/certifications\";\nexport default function CertificationList() {\n  _s();\n  const [certs, setCerts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const fetchCerts = async () => {\n    const res = await fetch(`${API_URL}?user_id=temp_user`);\n    const data = await res.json();\n    setCerts(sortCerts(data || []));\n  };\n  useEffect(() => {\n    fetchCerts();\n  }, []);\n  const sortCerts = certArray => {\n    const today = new Date();\n    return certArray.sort((a, b) => {\n      const aExp = a.expiration_date ? new Date(a.expiration_date) : null;\n      const bExp = b.expiration_date ? new Date(b.expiration_date) : null;\n      const aExpired = aExp && aExp < today;\n      const bExpired = bExp && bExp < today;\n      const aExpSoon = aExp && aExp - today <= 1000 * 60 * 60 * 24 * 90;\n      const bExpSoon = bExp && bExp - today <= 1000 * 60 * 60 * 24 * 90;\n      if (aExpired && !bExpired) return -1;\n      if (!aExpired && bExpired) return 1;\n      if (aExpSoon && !bExpSoon) return -1;\n      if (!aExpSoon && bExpSoon) return 1;\n      return 0;\n    }).map((c, i) => ({\n      ...c,\n      position: i\n    })); // recalc position\n  };\n  const addCert = async formData => {\n    formData.append(\"user_id\", \"temp_user\");\n    const res = await fetch(API_URL, {\n      method: \"POST\",\n      body: formData\n    });\n    const added = await res.json();\n    setCerts(sortCerts([...certs, added]));\n  };\n  const deleteCert = async id => {\n    if (!window.confirm(\"Delete this certification?\")) return;\n    await fetch(`${API_URL}/${id}?user_id=temp_user`, {\n      method: \"DELETE\"\n    });\n    setCerts(sortCerts(certs.filter(c => c.id !== id)));\n  };\n  const filteredCerts = certs.filter(c => {\n    var _c$issuer;\n    return (_c$issuer = c.issuer) === null || _c$issuer === void 0 ? void 0 : _c$issuer.toLowerCase().includes(search.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Certifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CertificationForm, {\n      addCert: addCert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Search by issuer...\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      style: {\n        margin: \"8px 0\",\n        padding: \"4px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), filteredCerts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No certifications found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 38\n    }, this), filteredCerts.map(c => /*#__PURE__*/_jsxDEV(CertificationCard, {\n      cert: c,\n      onDelete: deleteCert\n    }, c.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(CertificationList, \"Ul8oqUXPJKqdXBp6TAaf1g1zmKk=\");\n_c = CertificationList;\nvar _c;\n$RefreshReg$(_c, \"CertificationList\");","map":{"version":3,"names":["React","useEffect","useState","CertificationForm","CertificationCard","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","CertificationList","_s","certs","setCerts","search","setSearch","fetchCerts","res","fetch","data","json","sortCerts","certArray","today","Date","sort","a","b","aExp","expiration_date","bExp","aExpired","bExpired","aExpSoon","bExpSoon","map","c","i","position","addCert","formData","append","method","body","added","deleteCert","id","window","confirm","filter","filteredCerts","_c$issuer","issuer","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","style","margin","padding","length","cert","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/jonat/Documents/CS490/ProjectGit/cs-490-project/frontend/src/certifications/CertificationList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport CertificationForm from \"./CertificationForm\";\r\nimport CertificationCard from \"./CertificationCard\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL + \"/certifications\";\r\n\r\nexport default function CertificationList() {\r\n  const [certs, setCerts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const fetchCerts = async () => {\r\n    const res = await fetch(`${API_URL}?user_id=temp_user`);\r\n    const data = await res.json();\r\n    setCerts(sortCerts(data || []));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCerts();\r\n  }, []);\r\n\r\n  const sortCerts = (certArray) => {\r\n    const today = new Date();\r\n    return certArray\r\n      .sort((a, b) => {\r\n        const aExp = a.expiration_date ? new Date(a.expiration_date) : null;\r\n        const bExp = b.expiration_date ? new Date(b.expiration_date) : null;\r\n\r\n        const aExpired = aExp && aExp < today;\r\n        const bExpired = bExp && bExp < today;\r\n\r\n        const aExpSoon = aExp && aExp - today <= 1000 * 60 * 60 * 24 * 90;\r\n        const bExpSoon = bExp && bExp - today <= 1000 * 60 * 60 * 24 * 90;\r\n\r\n        if (aExpired && !bExpired) return -1;\r\n        if (!aExpired && bExpired) return 1;\r\n        if (aExpSoon && !bExpSoon) return -1;\r\n        if (!aExpSoon && bExpSoon) return 1;\r\n        return 0;\r\n      })\r\n      .map((c, i) => ({ ...c, position: i })); // recalc position\r\n  };\r\n\r\n  const addCert = async (formData) => {\r\n    formData.append(\"user_id\", \"temp_user\");\r\n    const res = await fetch(API_URL, { method: \"POST\", body: formData });\r\n    const added = await res.json();\r\n    setCerts(sortCerts([...certs, added]));\r\n  };\r\n\r\n  const deleteCert = async (id) => {\r\n    if (!window.confirm(\"Delete this certification?\")) return;\r\n    await fetch(`${API_URL}/${id}?user_id=temp_user`, { method: \"DELETE\" });\r\n    setCerts(sortCerts(certs.filter((c) => c.id !== id)));\r\n  };\r\n\r\n  const filteredCerts = certs.filter((c) =>\r\n    c.issuer?.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Certifications</h2>\r\n      <CertificationForm addCert={addCert} />\r\n      <input\r\n        placeholder=\"Search by issuer...\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        style={{ margin: \"8px 0\", padding: \"4px\" }}\r\n      />\r\n      {filteredCerts.length === 0 && <p>No certifications found</p>}\r\n      {filteredCerts.map((c) => (\r\n        <CertificationCard key={c.id} cert={c} onDelete={deleteCert} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}