{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\Documents\\\\CS490\\\\ProjectGit\\\\cs-490-project\\\\frontend\\\\src\\\\projects\\\\ProjectList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ProjectForm from \"./ProjectForm\";\nimport ProjectCard from \"./ProjectCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL + \"/projects\";\nexport default function ProjectsList() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const fetchProjects = async () => {\n    const res = await fetch(`${API_URL}/?user_id=temp_user`);\n    const data = await res.json();\n    setProjects(data || []);\n  };\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const addProject = async formData => {\n    formData.append(\"user_id\", \"temp_user\");\n    const res = await fetch(`${API_URL}/`, {\n      method: \"POST\",\n      body: formData\n    });\n    const newProject = await res.json();\n    setProjects([...projects, newProject]);\n  };\n  const deleteProject = async id => {\n    if (!window.confirm(\"Delete this project?\")) return;\n    await fetch(`${API_URL}/${id}/?user_id=temp_user`, {\n      method: \"DELETE\"\n    });\n    setProjects(prev => prev.filter(p => p.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Special Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectForm, {\n      addProject: addProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Search...\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      style: {\n        margin: \"10px 0\",\n        padding: \"5px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-grid\",\n      children: projects.filter(p => {\n        var _p$name;\n        return (_p$name = p.name) === null || _p$name === void 0 ? void 0 : _p$name.toLowerCase().includes(search.toLowerCase());\n      }).map(p => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: p,\n        deleteProject: deleteProject\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectsList, \"6VXhtN4uEuG9L1cV3xpHX7oX5vc=\");\n_c = ProjectsList;\nvar _c;\n$RefreshReg$(_c, \"ProjectsList\");","map":{"version":3,"names":["React","useEffect","useState","ProjectForm","ProjectCard","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","ProjectsList","_s","projects","setProjects","search","setSearch","fetchProjects","res","fetch","data","json","addProject","formData","append","method","body","newProject","deleteProject","id","window","confirm","prev","filter","p","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","style","margin","padding","className","_p$name","name","toLowerCase","includes","map","project","_c","$RefreshReg$"],"sources":["C:/Users/jonat/Documents/CS490/ProjectGit/cs-490-project/frontend/src/projects/ProjectList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ProjectForm from \"./ProjectForm\";\r\nimport ProjectCard from \"./ProjectCard\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL + \"/projects\";\r\n\r\nexport default function ProjectsList() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const fetchProjects = async () => {\r\n    const res = await fetch(`${API_URL}/?user_id=temp_user`);\r\n    const data = await res.json();\r\n    setProjects(data || []);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const addProject = async (formData) => {\r\n    formData.append(\"user_id\", \"temp_user\");\r\n\r\n    const res = await fetch(`${API_URL}/`, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    const newProject = await res.json();\r\n    setProjects([...projects, newProject]);\r\n  };\r\n\r\n  const deleteProject = async (id) => {\r\n    if (!window.confirm(\"Delete this project?\")) return;\r\n    await fetch(`${API_URL}/${id}/?user_id=temp_user`, { method: \"DELETE\" });\r\n    setProjects((prev) => prev.filter((p) => p.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Special Projects</h2>\r\n      <ProjectForm addProject={addProject} />\r\n\r\n      <input\r\n        placeholder=\"Search...\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        style={{ margin: \"10px 0\", padding: \"5px\" }}\r\n      />\r\n\r\n      <div className=\"project-grid\">\r\n        {projects\r\n          .filter((p) =>\r\n            p.name?.toLowerCase().includes(search.toLowerCase())\r\n          )\r\n          .map((p) => (\r\n            <ProjectCard key={p.id} project={p} deleteProject={deleteProject} />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}