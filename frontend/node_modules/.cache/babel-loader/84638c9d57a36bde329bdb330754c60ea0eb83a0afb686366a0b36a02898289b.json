{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\Documents\\\\CS490\\\\ProjectGit\\\\cs-490-project\\\\frontend\\\\src\\\\certifications\\\\CertificationForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CertificationForm({\n  addCert\n}) {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [issuer, setIssuer] = useState(\"\");\n  const [dateEarned, setDateEarned] = useState(\"\");\n  const [doesNotExpire, setDoesNotExpire] = useState(false);\n  const [expirationDate, setExpirationDate] = useState(\"\");\n  const [certId, setCertId] = useState(\"\");\n  const [documentFile, setDocumentFile] = useState(null);\n  const [verified] = useState(false);\n  const [category, setCategory] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"user_id\", \"temp_user\"); // ✅ REQUIRED\n    formData.append(\"name\", name);\n    formData.append(\"issuer\", issuer);\n    formData.append(\"date_earned\", dateEarned);\n    formData.append(\"does_not_expire\", doesNotExpire);\n    if (!doesNotExpire) formData.append(\"expiration_date\", expirationDate);\n    formData.append(\"cert_id\", certId);\n    formData.append(\"verified\", verified);\n    formData.append(\"category\", category);\n    if (documentFile) formData.append(\"document\", documentFile); // ✅ field match\n\n    addCert(formData);\n    setName(\"\");\n    setIssuer(\"\");\n    setDateEarned(\"\");\n    setDoesNotExpire(false);\n    setExpirationDate(\"\");\n    setCertId(\"\");\n    setDocumentFile(null);\n    setCategory(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"cert-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Certification Name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Issuer\",\n      value: issuer,\n      onChange: e => setIssuer(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Date Earned\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: dateEarned,\n      onChange: e => setDateEarned(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Expiration Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), !doesNotExpire && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: expirationDate,\n      onChange: e => setExpirationDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: doesNotExpire,\n        onChange: e => setDoesNotExpire(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), \"Does Not Expire\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Certification ID (optional)\",\n      value: certId,\n      onChange: e => setCertId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Category\",\n      value: category,\n      onChange: e => setCategory(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setDocumentFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Certification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(CertificationForm, \"/KPRh82gxfpYfP3jeHXdLl6FKIk=\");\n_c = CertificationForm;\nvar _c;\n$RefreshReg$(_c, \"CertificationForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CertificationForm","addCert","_s","name","setName","issuer","setIssuer","dateEarned","setDateEarned","doesNotExpire","setDoesNotExpire","expirationDate","setExpirationDate","certId","setCertId","documentFile","setDocumentFile","verified","category","setCategory","handleSubmit","e","preventDefault","formData","FormData","append","onSubmit","className","children","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","files","_c","$RefreshReg$"],"sources":["C:/Users/jonat/Documents/CS490/ProjectGit/cs-490-project/frontend/src/certifications/CertificationForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function CertificationForm({ addCert }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [issuer, setIssuer] = useState(\"\");\r\n  const [dateEarned, setDateEarned] = useState(\"\");\r\n  const [doesNotExpire, setDoesNotExpire] = useState(false);\r\n  const [expirationDate, setExpirationDate] = useState(\"\");\r\n  const [certId, setCertId] = useState(\"\");\r\n  const [documentFile, setDocumentFile] = useState(null);\r\n  const [verified] = useState(false);\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"user_id\", \"temp_user\"); // ✅ REQUIRED\r\n    formData.append(\"name\", name);\r\n    formData.append(\"issuer\", issuer);\r\n    formData.append(\"date_earned\", dateEarned);\r\n    formData.append(\"does_not_expire\", doesNotExpire);\r\n    if (!doesNotExpire) formData.append(\"expiration_date\", expirationDate);\r\n    formData.append(\"cert_id\", certId);\r\n    formData.append(\"verified\", verified);\r\n    formData.append(\"category\", category);\r\n    if (documentFile) formData.append(\"document\", documentFile); // ✅ field match\r\n\r\n    addCert(formData);\r\n\r\n    setName(\"\"); setIssuer(\"\"); setDateEarned(\"\"); setDoesNotExpire(false);\r\n    setExpirationDate(\"\"); setCertId(\"\"); setDocumentFile(null); setCategory(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"cert-form\">\r\n      <input placeholder=\"Certification Name\" value={name} onChange={e => setName(e.target.value)} required />\r\n      <input placeholder=\"Issuer\" value={issuer} onChange={e => setIssuer(e.target.value)} required />\r\n\r\n      <label>Date Earned</label>\r\n      <input type=\"date\" value={dateEarned} onChange={e => setDateEarned(e.target.value)} required />\r\n\r\n      <label>Expiration Date</label>\r\n      {!doesNotExpire && (\r\n        <input type=\"date\" value={expirationDate} onChange={e => setExpirationDate(e.target.value)} />\r\n      )}\r\n      <label>\r\n        <input type=\"checkbox\" checked={doesNotExpire} onChange={e => setDoesNotExpire(e.target.checked)} />\r\n        Does Not Expire\r\n      </label>\r\n\r\n      <input placeholder=\"Certification ID (optional)\" value={certId} onChange={e => setCertId(e.target.value)} />\r\n\r\n      <input placeholder=\"Category\" value={category} onChange={e => setCategory(e.target.value)} />\r\n\r\n      <input type=\"file\" onChange={e => setDocumentFile(e.target.files[0])} />\r\n\r\n      <button type=\"submit\">Add Certification</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}